{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u4f7f\u7528ICARUS \u00b6 \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5feb\u901f\u811a\u672c\u5f00\u53d1\u7684\u7c7bPython\u89e3\u91ca\u5668\u3002 from base import * echo ( \"Hello World!\" , GREEN )","title":"\u6b22\u8fce"},{"location":"#\u6b22\u8fce\u4f7f\u7528icarus","text":"\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5feb\u901f\u811a\u672c\u5f00\u53d1\u7684\u7c7bPython\u89e3\u91ca\u5668\u3002 from base import * echo ( \"Hello World!\" , GREEN )","title":"\u6b22\u8fce\u4f7f\u7528ICARUS"},{"location":"ICARUS-auto/","text":"ICARUS Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import ICARUS # \u5f15\u5165\u6a21\u5757 from ICARUS import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function config \u00b6 def config ( name : str , value : str ) -> \u73af\u5883\u53d8\u91cf\u7684\u503c \u83b7\u53d6Icarus\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684Env\u5b57\u6bb5 name : \u53d8\u91cf\u540d value : \u82e5\u6b64\u53c2\u6570\u4e0d\u5b58\u5728\u5219\u4e3a\u83b7\u53d6\uff0c\u82e5\u6b64\u53c2\u6570\u5b58\u5728\u5219\u4e3a\u4fee\u6539 function kill_task \u00b6 def kill_task ( tid : int ) -> None \u7ec8\u6b62\u4efb\u52a1\u3002 tid : \u4efb\u52a1\u5e8f\u53f7 function version \u00b6 def version () -> None \u83b7\u53d6ICARUS\u7248\u672c function exit \u00b6 def exit () -> None \u7ec8\u6b62\u5f53\u524d\u7a0b\u5e8f function env \u00b6 def env ( name : str , value : str ) -> \u73af\u5883\u53d8\u91cf\u7684\u503c \u83b7\u53d6Icarus\u73af\u5883\u53d8\u91cf name : \u53d8\u91cf\u540d value : \u82e5\u6b64\u53c2\u6570\u4e0d\u5b58\u5728\u5219\u4e3a\u83b7\u53d6\uff0c\u82e5\u6b64\u53c2\u6570\u5b58\u5728\u5219\u4e3a\u4fee\u6539 function shell_exec \u00b6 def shell_exec ( cmd : str , args : list , visible : bool , cmd_dir : str ) -> \u8fd4\u56de\u4efb\u52a1id \u5728\u672c\u5730\u6267\u884cshell\u547d\u4ee4\uff0c\u4ee5\u4efb\u52a1\u6267\u884c\uff0c\u975e\u963b\u585e\u51fd\u6570\u3002 ps.\u8bb0\u5f97\u4f7f\u7528kill_task()\u7ec8\u6b62 cmd : \u8981\u6267\u884c\u7684\u547d\u4ee4 args : \u547d\u4ee4\u884c\u53c2\u6570\uff0c\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u53ef\u7701\u7565 visible : \u6267\u884c\u7ed3\u679c\u662f\u5426\u53ef\u89c1\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u53efTrue cmd_dir : \u6267\u884c\u547d\u4ee4\u7684\u4f4d\u7f6e\uff0c\u53ef\u7701\u7565 function shell_fetch \u00b6 def shell_fetch ( tid : int , all_data : bool ) -> \u4e24\u4e2a\u5b57\u7b26\u4e32 ( \u6807\u51c6\u8f93\u51fa , \u6807\u51c6\u9519\u8bef ) \u83b7\u53d6shell\u6267\u884c\u7684\u7ed3\u679c\uff0c\u8fd4\u56de\u6807\u51c6\u8f93\u51fa\u4e0e\u6807\u51c6\u9519\u8bef\u3002 tid : \u4efb\u52a1\u5e8f\u53f7 all_data : \u662f\u5426\u53d6\u56de\u5b8c\u6574\u5185\u5bb9\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3afalse function platform \u00b6 def platform () -> None \u83b7\u53d6\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\u53caCPU\u67b6\u6784 function terminal_size \u00b6 def terminal_size () -> None \u83b7\u53d6\u7ec8\u7aef\u5c3a\u5bf8","title":"ICARUS"},{"location":"ICARUS-auto/#icarus-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import ICARUS # \u5f15\u5165\u6a21\u5757 from ICARUS import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"ICARUS Module"},{"location":"ICARUS-auto/#function--config","text":"def config ( name : str , value : str ) -> \u73af\u5883\u53d8\u91cf\u7684\u503c \u83b7\u53d6Icarus\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684Env\u5b57\u6bb5 name : \u53d8\u91cf\u540d value : \u82e5\u6b64\u53c2\u6570\u4e0d\u5b58\u5728\u5219\u4e3a\u83b7\u53d6\uff0c\u82e5\u6b64\u53c2\u6570\u5b58\u5728\u5219\u4e3a\u4fee\u6539","title":"function  config"},{"location":"ICARUS-auto/#function--kill_task","text":"def kill_task ( tid : int ) -> None \u7ec8\u6b62\u4efb\u52a1\u3002 tid : \u4efb\u52a1\u5e8f\u53f7","title":"function  kill_task"},{"location":"ICARUS-auto/#function--version","text":"def version () -> None \u83b7\u53d6ICARUS\u7248\u672c","title":"function  version"},{"location":"ICARUS-auto/#function--exit","text":"def exit () -> None \u7ec8\u6b62\u5f53\u524d\u7a0b\u5e8f","title":"function  exit"},{"location":"ICARUS-auto/#function--env","text":"def env ( name : str , value : str ) -> \u73af\u5883\u53d8\u91cf\u7684\u503c \u83b7\u53d6Icarus\u73af\u5883\u53d8\u91cf name : \u53d8\u91cf\u540d value : \u82e5\u6b64\u53c2\u6570\u4e0d\u5b58\u5728\u5219\u4e3a\u83b7\u53d6\uff0c\u82e5\u6b64\u53c2\u6570\u5b58\u5728\u5219\u4e3a\u4fee\u6539","title":"function  env"},{"location":"ICARUS-auto/#function--shell_exec","text":"def shell_exec ( cmd : str , args : list , visible : bool , cmd_dir : str ) -> \u8fd4\u56de\u4efb\u52a1id \u5728\u672c\u5730\u6267\u884cshell\u547d\u4ee4\uff0c\u4ee5\u4efb\u52a1\u6267\u884c\uff0c\u975e\u963b\u585e\u51fd\u6570\u3002 ps.\u8bb0\u5f97\u4f7f\u7528kill_task()\u7ec8\u6b62 cmd : \u8981\u6267\u884c\u7684\u547d\u4ee4 args : \u547d\u4ee4\u884c\u53c2\u6570\uff0c\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u53ef\u7701\u7565 visible : \u6267\u884c\u7ed3\u679c\u662f\u5426\u53ef\u89c1\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u53efTrue cmd_dir : \u6267\u884c\u547d\u4ee4\u7684\u4f4d\u7f6e\uff0c\u53ef\u7701\u7565","title":"function  shell_exec"},{"location":"ICARUS-auto/#function--shell_fetch","text":"def shell_fetch ( tid : int , all_data : bool ) -> \u4e24\u4e2a\u5b57\u7b26\u4e32 ( \u6807\u51c6\u8f93\u51fa , \u6807\u51c6\u9519\u8bef ) \u83b7\u53d6shell\u6267\u884c\u7684\u7ed3\u679c\uff0c\u8fd4\u56de\u6807\u51c6\u8f93\u51fa\u4e0e\u6807\u51c6\u9519\u8bef\u3002 tid : \u4efb\u52a1\u5e8f\u53f7 all_data : \u662f\u5426\u53d6\u56de\u5b8c\u6574\u5185\u5bb9\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3afalse","title":"function  shell_fetch"},{"location":"ICARUS-auto/#function--platform","text":"def platform () -> None \u83b7\u53d6\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\u53caCPU\u67b6\u6784","title":"function  platform"},{"location":"ICARUS-auto/#function--terminal_size","text":"def terminal_size () -> None \u83b7\u53d6\u7ec8\u7aef\u5c3a\u5bf8","title":"function  terminal_size"},{"location":"base-auto/","text":"base Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import base # \u5f15\u5165\u6a21\u5757 from base import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function echo \u00b6 def echo ( something , color = WHITE , end = \" \\n \" ) -> None \u5efa\u8bae\u4f7f\u7528\u7684\u8f93\u51fa Eg. echo(\"\u6807\u51c6\u8272\",GREEN) echo(\"\u5341\u516d\u8fdb\u5236\",\"f35336\") echo(\"256\u8272\",72) echo(\"RGB\",(30, 144, 255)) echo(\"\u901a\u8fc7256\u8272\u8bbe\u7f6e \u524d\u666f\u8272\uff0c\u540e\u666f\u8272\",(23,145)) echo(\"\u901a\u8fc7\u5341\u516d\u8fdb\u5236\u8bbe\u7f6e \u524d\u666f\u8272\uff0c\u540e\u666f\u8272\",(\"2add9c\",\"eaff56\")) echo(\"\u901a\u8fc7RGB\u8bbe\u7f6e \u524d\u666f\u8272\uff0c\u540e\u666f\u8272\",((20, 144, 234),(234, 78, 23))) echo(\"\u6df7\u642d\",((30, 144, 255),\"c93756\")) something : \u53ef\u4ee5\u4e3a\u4efb\u610f\u7c7b\u578b\uff0c\u5982\u679c\u662f\u5b57\u5178\uff0c\u5217\u8868\u5c06\u8f93\u51fa\u4ed6\u4eec\u5728go\u4e2d\u7684\u7ed3\u6784 color : \u8f93\u51fa\u7684\u989c\u8272\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3autils.WHITE\u3002 end : \u8f93\u51fa\u7684\u7ed3\u5c3e\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u6362\u884c\u7b26 function read_file \u00b6 def read_file ( file_path : str ) -> None \u8bfb\u53d6\u6587\u4ef6 file_path : function center \u00b6 def center ( something , color = WHITE ) -> None \u5c45\u4e2d\u8f93\u51fa\uff0c\u62e5\u6709\u548cecho\u540c\u6837\u7684\u591a\u79cd\u989c\u8272\u683c\u5f0f\u652f\u6301 something : \u5b57\u7b26\u4e32 color : \u8f93\u51fa\u7684\u989c\u8272\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3autils.WHITE function input \u00b6 def input ( prefix = \">\" , color = WHITE , items = dict ) -> None \u5e26\u6709\u8865\u5168\u63d0\u793a\u7684\u8f93\u5165 prefix : \u524d\u7f00\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\">\" color : \u989c\u8272\uff0c\u524d\u7f00\u7684\u989c\u8272\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3autils.WHITE items : \u5b57\u5178\uff0c\u952e\u4e3a\u63d0\u793a\u8bcd\uff0c\u503c\u4e3a\u63cf\u8ff0\u3002e.g.{\"hello\":\"\u4f60\u597d\"}\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u7a7a function walk_dir \u00b6 def walk_dir ( path : str , recursion = False ) -> \u6240\u6709\u6587\u4ef6\u4e0e\u6587\u4ef6\u5939 \u904d\u5386\u6587\u4ef6\u5939 path : \u8def\u5f84 recursion : \u9012\u5f52\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false function save_file \u00b6 def save_file ( file_path : str , content : str , cover = False ) -> None \u4fdd\u5b58\u6587\u4ef6 file_path : \u4fdd\u5b58\u6587\u4ef6\u8def\u5f84 content : \u5185\u5bb9 cover : \u662f\u5426\u8986\u76d6\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false function col \u00b6 def col ( path ) -> None \u8fd4\u56decollection\u5185\u8def\u5f84 function now \u00b6 def now () -> None \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u5b57\u7b26\u4e32","title":"base"},{"location":"base-auto/#base-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import base # \u5f15\u5165\u6a21\u5757 from base import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"base Module"},{"location":"base-auto/#function--echo","text":"def echo ( something , color = WHITE , end = \" \\n \" ) -> None \u5efa\u8bae\u4f7f\u7528\u7684\u8f93\u51fa Eg. echo(\"\u6807\u51c6\u8272\",GREEN) echo(\"\u5341\u516d\u8fdb\u5236\",\"f35336\") echo(\"256\u8272\",72) echo(\"RGB\",(30, 144, 255)) echo(\"\u901a\u8fc7256\u8272\u8bbe\u7f6e \u524d\u666f\u8272\uff0c\u540e\u666f\u8272\",(23,145)) echo(\"\u901a\u8fc7\u5341\u516d\u8fdb\u5236\u8bbe\u7f6e \u524d\u666f\u8272\uff0c\u540e\u666f\u8272\",(\"2add9c\",\"eaff56\")) echo(\"\u901a\u8fc7RGB\u8bbe\u7f6e \u524d\u666f\u8272\uff0c\u540e\u666f\u8272\",((20, 144, 234),(234, 78, 23))) echo(\"\u6df7\u642d\",((30, 144, 255),\"c93756\")) something : \u53ef\u4ee5\u4e3a\u4efb\u610f\u7c7b\u578b\uff0c\u5982\u679c\u662f\u5b57\u5178\uff0c\u5217\u8868\u5c06\u8f93\u51fa\u4ed6\u4eec\u5728go\u4e2d\u7684\u7ed3\u6784 color : \u8f93\u51fa\u7684\u989c\u8272\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3autils.WHITE\u3002 end : \u8f93\u51fa\u7684\u7ed3\u5c3e\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u6362\u884c\u7b26","title":"function  echo"},{"location":"base-auto/#function--read_file","text":"def read_file ( file_path : str ) -> None \u8bfb\u53d6\u6587\u4ef6 file_path :","title":"function  read_file"},{"location":"base-auto/#function--center","text":"def center ( something , color = WHITE ) -> None \u5c45\u4e2d\u8f93\u51fa\uff0c\u62e5\u6709\u548cecho\u540c\u6837\u7684\u591a\u79cd\u989c\u8272\u683c\u5f0f\u652f\u6301 something : \u5b57\u7b26\u4e32 color : \u8f93\u51fa\u7684\u989c\u8272\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3autils.WHITE","title":"function  center"},{"location":"base-auto/#function--input","text":"def input ( prefix = \">\" , color = WHITE , items = dict ) -> None \u5e26\u6709\u8865\u5168\u63d0\u793a\u7684\u8f93\u5165 prefix : \u524d\u7f00\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\">\" color : \u989c\u8272\uff0c\u524d\u7f00\u7684\u989c\u8272\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3autils.WHITE items : \u5b57\u5178\uff0c\u952e\u4e3a\u63d0\u793a\u8bcd\uff0c\u503c\u4e3a\u63cf\u8ff0\u3002e.g.{\"hello\":\"\u4f60\u597d\"}\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u7a7a","title":"function  input"},{"location":"base-auto/#function--walk_dir","text":"def walk_dir ( path : str , recursion = False ) -> \u6240\u6709\u6587\u4ef6\u4e0e\u6587\u4ef6\u5939 \u904d\u5386\u6587\u4ef6\u5939 path : \u8def\u5f84 recursion : \u9012\u5f52\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false","title":"function  walk_dir"},{"location":"base-auto/#function--save_file","text":"def save_file ( file_path : str , content : str , cover = False ) -> None \u4fdd\u5b58\u6587\u4ef6 file_path : \u4fdd\u5b58\u6587\u4ef6\u8def\u5f84 content : \u5185\u5bb9 cover : \u662f\u5426\u8986\u76d6\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false","title":"function  save_file"},{"location":"base-auto/#function--col","text":"def col ( path ) -> None \u8fd4\u56decollection\u5185\u8def\u5f84","title":"function  col"},{"location":"base-auto/#function--now","text":"def now () -> None \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u5b57\u7b26\u4e32","title":"function  now"},{"location":"cli-auto/","text":"cli Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import cli # \u5f15\u5165\u6a21\u5757 from cli import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"cli"},{"location":"cli-auto/#cli-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import cli # \u5f15\u5165\u6a21\u5757 from cli import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"cli Module"},{"location":"cmds-auto/","text":"cmds Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import cmds # \u5f15\u5165\u6a21\u5757 from cmds import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function PUT_PUBLIC_KEY \u00b6 def PUT_PUBLIC_KEY ( key_or_key_path : str ) -> None \u751f\u6210\u6dfb\u52a0\u516c\u94a5\u547d\u4ee4 :params key_or_key_path: \u516c\u94a5\u5b57\u7b26\u4e32\u6216\u516c\u94a5\u6587\u4ef6\u8def\u5f84 function REVERSE_SHELL \u00b6 def REVERSE_SHELL ( address : str , mode : int ) -> None \u751f\u6210\u53cd\u5f39shell\u547d\u4ee4 address : \u63a5\u6536shell\u7684\u5730\u5740 mode : payload\u6a21\u5f0f\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3acmds.BASH function NC_LISTEN \u00b6 def NC_LISTEN ( port : int ) -> None \u751f\u6210nc\u76d1\u542c\u547d\u4ee4\uff08tcp\uff09 port : \u76d1\u542c\u7aef\u53e3","title":"cmds"},{"location":"cmds-auto/#cmds-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import cmds # \u5f15\u5165\u6a21\u5757 from cmds import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"cmds Module"},{"location":"cmds-auto/#function--put_public_key","text":"def PUT_PUBLIC_KEY ( key_or_key_path : str ) -> None \u751f\u6210\u6dfb\u52a0\u516c\u94a5\u547d\u4ee4 :params key_or_key_path: \u516c\u94a5\u5b57\u7b26\u4e32\u6216\u516c\u94a5\u6587\u4ef6\u8def\u5f84","title":"function  PUT_PUBLIC_KEY"},{"location":"cmds-auto/#function--reverse_shell","text":"def REVERSE_SHELL ( address : str , mode : int ) -> None \u751f\u6210\u53cd\u5f39shell\u547d\u4ee4 address : \u63a5\u6536shell\u7684\u5730\u5740 mode : payload\u6a21\u5f0f\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3acmds.BASH","title":"function  REVERSE_SHELL"},{"location":"cmds-auto/#function--nc_listen","text":"def NC_LISTEN ( port : int ) -> None \u751f\u6210nc\u76d1\u542c\u547d\u4ee4\uff08tcp\uff09 port : \u76d1\u542c\u7aef\u53e3","title":"function  NC_LISTEN"},{"location":"coding-auto/","text":"coding Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import coding # \u5f15\u5165\u6a21\u5757 from coding import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function utf8 \u00b6 def utf8 ( charset : str , text : str ) -> None \u5c06\u5176\u4ed6\u5b57\u7b26\u96c6\u6587\u672c\u8f6c\u6362\u4e3autf8 text : \u6e90\u6587\u672c charset : \u6e90\u6587\u672c\u4f7f\u7528\u7684\u5b57\u7b26\u96c6 function json_loads \u00b6 def json_loads ( json_data : str ) -> \u53cd\u5e8f\u5217\u5316\u540e\u7684\u5bf9\u8c61 ( dict\u6216list ) \u53cd\u5e8f\u5217\u5316json\u5bf9\u8c61 json_data : \u5e8f\u5217\u5316\u7684\u5bf9\u8c61 function json_indent \u00b6 def json_indent ( json_data : str ) -> None \u901a\u8fc7\u6dfb\u52a0\u7f29\u8fdb\u7f8e\u5316json\u683c\u5f0f json_data : \u5e8f\u5217\u5316\u7684\u5bf9\u8c61 function url_decode \u00b6 def url_decode ( url : str ) -> None url\u89e3\u7801 url : \u9700\u8981\u89e3\u7801\u7684\u6587\u672c function bytes_to_string \u00b6 def bytes_to_string ( b : bytes ) -> None bytes\u8f6c\u5b57\u7b26\u4e32 b : \u5b57\u8282\u5217\u8868 function json_dumps \u00b6 def json_dumps ( obj : object ) -> \u5e8f\u5217\u5316\u540e\u7684\u5bf9\u8c61 \u5e8f\u5217\u5316\u5bf9\u8c61 obj : \u5bf9\u8c61 function url_encode \u00b6 def url_encode ( text : str ) -> None url\u7f16\u7801 text : \u9700\u8981\u7f16\u7801\u7684\u6587\u672c","title":"coding"},{"location":"coding-auto/#coding-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import coding # \u5f15\u5165\u6a21\u5757 from coding import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"coding Module"},{"location":"coding-auto/#function--utf8","text":"def utf8 ( charset : str , text : str ) -> None \u5c06\u5176\u4ed6\u5b57\u7b26\u96c6\u6587\u672c\u8f6c\u6362\u4e3autf8 text : \u6e90\u6587\u672c charset : \u6e90\u6587\u672c\u4f7f\u7528\u7684\u5b57\u7b26\u96c6","title":"function  utf8"},{"location":"coding-auto/#function--json_loads","text":"def json_loads ( json_data : str ) -> \u53cd\u5e8f\u5217\u5316\u540e\u7684\u5bf9\u8c61 ( dict\u6216list ) \u53cd\u5e8f\u5217\u5316json\u5bf9\u8c61 json_data : \u5e8f\u5217\u5316\u7684\u5bf9\u8c61","title":"function  json_loads"},{"location":"coding-auto/#function--json_indent","text":"def json_indent ( json_data : str ) -> None \u901a\u8fc7\u6dfb\u52a0\u7f29\u8fdb\u7f8e\u5316json\u683c\u5f0f json_data : \u5e8f\u5217\u5316\u7684\u5bf9\u8c61","title":"function  json_indent"},{"location":"coding-auto/#function--url_decode","text":"def url_decode ( url : str ) -> None url\u89e3\u7801 url : \u9700\u8981\u89e3\u7801\u7684\u6587\u672c","title":"function  url_decode"},{"location":"coding-auto/#function--bytes_to_string","text":"def bytes_to_string ( b : bytes ) -> None bytes\u8f6c\u5b57\u7b26\u4e32 b : \u5b57\u8282\u5217\u8868","title":"function  bytes_to_string"},{"location":"coding-auto/#function--json_dumps","text":"def json_dumps ( obj : object ) -> \u5e8f\u5217\u5316\u540e\u7684\u5bf9\u8c61 \u5e8f\u5217\u5316\u5bf9\u8c61 obj : \u5bf9\u8c61","title":"function  json_dumps"},{"location":"coding-auto/#function--url_encode","text":"def url_encode ( text : str ) -> None url\u7f16\u7801 text : \u9700\u8981\u7f16\u7801\u7684\u6587\u672c","title":"function  url_encode"},{"location":"crypto-auto/","text":"crypto Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import crypto # \u5f15\u5165\u6a21\u5757 from crypto import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"crypto"},{"location":"crypto-auto/#crypto-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import crypto # \u5f15\u5165\u6a21\u5757 from crypto import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"crypto Module"},{"location":"docker-auto/","text":"docker Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import docker # \u5f15\u5165\u6a21\u5757 from docker import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b class Docker \u00b6 class Docker ( self ) \u8fde\u63a5docker daemon method images \u00b6 def images ( self ) -> \u8fd4\u56de\u5305\u542b\u955c\u50cf\u540d\u7684\u5b57\u7b26\u4e32\u5217\u8868 \u83b7\u53d6\u5df2\u4e0b\u8f7d\u7684\u955c\u50cf method containers \u00b6 def containers ( self ) -> \u8fd4\u56de\u5bb9\u5668\u5217\u8868 \u83b7\u53d6\u6240\u6709\u5bb9\u5668 method start_container \u00b6 def start_container ( self , cid : str ) -> \u8fd4\u56de\u662f\u5426\u6267\u884c\u6210\u529f \u542f\u52a8\u5bb9\u5668 method stop_container \u00b6 def stop_container ( self , cid : str ) -> \u8fd4\u56de\u662f\u5426\u6267\u884c\u6210\u529f \u505c\u6b62\u5bb9\u5668 method remove_container \u00b6 def remove_container ( self , cid : str ) -> \u8fd4\u56de\u662f\u5426\u6267\u884c\u6210\u529f \u79fb\u9664\u5bb9\u5668 method exec \u00b6 def exec ( self , cid : str , cmd : str ) -> \u8fd4\u56de\u6267\u884c\u662f\u5426\u6210\u529f \u5728\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4 class Container \u00b6 class Container ( self ) \u5bb9\u5668 method image \u00b6 def image ( self ) -> None \u751f\u6210\u6b64\u5bb9\u5668\u7684\u955c\u50cf method status \u00b6 def status ( self ) -> None \u5bb9\u5668\u72b6\u6001 (\u5bb9\u5668\u5df2\u542f\u52a8/\u505c\u6b62/\u91cd\u542f\u7684\u65f6\u957f) method state \u00b6 def state ( self ) -> None \u5bb9\u5668\u9636\u6bb5 (created,running,restarting,removing,paused,exited,dead) method id \u00b6 def id ( self ) -> None \u5bb9\u5668\u5b8c\u6574id (\u77edid\u4e3a\u524d12\u4f4d) method ports \u00b6 def ports ( self ) -> None \u6240\u6709\u7aef\u53e3\u6620\u5c04\u4fe1\u606f","title":"docker"},{"location":"docker-auto/#docker-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import docker # \u5f15\u5165\u6a21\u5757 from docker import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"docker Module"},{"location":"docker-auto/#class-docker","text":"class Docker ( self ) \u8fde\u63a5docker daemon","title":"class Docker"},{"location":"docker-auto/#method--images","text":"def images ( self ) -> \u8fd4\u56de\u5305\u542b\u955c\u50cf\u540d\u7684\u5b57\u7b26\u4e32\u5217\u8868 \u83b7\u53d6\u5df2\u4e0b\u8f7d\u7684\u955c\u50cf","title":"method  images"},{"location":"docker-auto/#method--containers","text":"def containers ( self ) -> \u8fd4\u56de\u5bb9\u5668\u5217\u8868 \u83b7\u53d6\u6240\u6709\u5bb9\u5668","title":"method  containers"},{"location":"docker-auto/#method--start_container","text":"def start_container ( self , cid : str ) -> \u8fd4\u56de\u662f\u5426\u6267\u884c\u6210\u529f \u542f\u52a8\u5bb9\u5668","title":"method  start_container"},{"location":"docker-auto/#method--stop_container","text":"def stop_container ( self , cid : str ) -> \u8fd4\u56de\u662f\u5426\u6267\u884c\u6210\u529f \u505c\u6b62\u5bb9\u5668","title":"method  stop_container"},{"location":"docker-auto/#method--remove_container","text":"def remove_container ( self , cid : str ) -> \u8fd4\u56de\u662f\u5426\u6267\u884c\u6210\u529f \u79fb\u9664\u5bb9\u5668","title":"method  remove_container"},{"location":"docker-auto/#method--exec","text":"def exec ( self , cid : str , cmd : str ) -> \u8fd4\u56de\u6267\u884c\u662f\u5426\u6210\u529f \u5728\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4","title":"method  exec"},{"location":"docker-auto/#class-container","text":"class Container ( self ) \u5bb9\u5668","title":"class Container"},{"location":"docker-auto/#method--image","text":"def image ( self ) -> None \u751f\u6210\u6b64\u5bb9\u5668\u7684\u955c\u50cf","title":"method  image"},{"location":"docker-auto/#method--status","text":"def status ( self ) -> None \u5bb9\u5668\u72b6\u6001 (\u5bb9\u5668\u5df2\u542f\u52a8/\u505c\u6b62/\u91cd\u542f\u7684\u65f6\u957f)","title":"method  status"},{"location":"docker-auto/#method--state","text":"def state ( self ) -> None \u5bb9\u5668\u9636\u6bb5 (created,running,restarting,removing,paused,exited,dead)","title":"method  state"},{"location":"docker-auto/#method--id","text":"def id ( self ) -> None \u5bb9\u5668\u5b8c\u6574id (\u77edid\u4e3a\u524d12\u4f4d)","title":"method  id"},{"location":"docker-auto/#method--ports","text":"def ports ( self ) -> None \u6240\u6709\u7aef\u53e3\u6620\u5c04\u4fe1\u606f","title":"method  ports"},{"location":"files-auto/","text":"files Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import files # \u5f15\u5165\u6a21\u5757 from files import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function load_excel \u00b6 def load_excel ( file_path : str , no_column_name = False ) -> None \u8f7d\u5165\u4e00\u4e2aexcel\u6587\u4ef6 file_path : \u6587\u4ef6\u8def\u5f84 no_column_name : \u7b2c\u4e00\u884c\u4e0d\u4f5c\u4e3a\u5b57\u6bb5\u540d\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4False function save_excel \u00b6 def save_excel ( file_path : str , data : dict , columns : dict ) -> None \u4fdd\u5b58\u4e00\u4e2aexcel\u6587\u4ef6 file_path : \u6587\u4ef6\u8def\u5f84 data : {\u8868\u540d:[]{\u5b57\u6bb5\u540d:\u503c}} columns : {\u8868\u540d:[]\u5b57\u6bb5\u540d} class Excel \u00b6 class Excel ( self ) Excel\u8868\u683c method get_names \u00b6 def get_names ( self ) -> None \u83b7\u53d6\u6240\u6709\u7684\u8868\u540d method get_data \u00b6 def get_data ( self , name : str ) -> None \u83b7\u53d6\u8868\u4e2d\u6570\u636e name : \u8868\u540d","title":"files"},{"location":"files-auto/#files-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import files # \u5f15\u5165\u6a21\u5757 from files import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"files Module"},{"location":"files-auto/#function--load_excel","text":"def load_excel ( file_path : str , no_column_name = False ) -> None \u8f7d\u5165\u4e00\u4e2aexcel\u6587\u4ef6 file_path : \u6587\u4ef6\u8def\u5f84 no_column_name : \u7b2c\u4e00\u884c\u4e0d\u4f5c\u4e3a\u5b57\u6bb5\u540d\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4False","title":"function  load_excel"},{"location":"files-auto/#function--save_excel","text":"def save_excel ( file_path : str , data : dict , columns : dict ) -> None \u4fdd\u5b58\u4e00\u4e2aexcel\u6587\u4ef6 file_path : \u6587\u4ef6\u8def\u5f84 data : {\u8868\u540d:[]{\u5b57\u6bb5\u540d:\u503c}} columns : {\u8868\u540d:[]\u5b57\u6bb5\u540d}","title":"function  save_excel"},{"location":"files-auto/#class-excel","text":"class Excel ( self ) Excel\u8868\u683c","title":"class Excel"},{"location":"files-auto/#method--get_names","text":"def get_names ( self ) -> None \u83b7\u53d6\u6240\u6709\u7684\u8868\u540d","title":"method  get_names"},{"location":"files-auto/#method--get_data","text":"def get_data ( self , name : str ) -> None \u83b7\u53d6\u8868\u4e2d\u6570\u636e name : \u8868\u540d","title":"method  get_data"},{"location":"fofa-auto/","text":"fofa Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import fofa # \u5f15\u5165\u6a21\u5757 from fofa import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b class FOFA \u00b6 class FOFA ( self , email : str , key : str ) \u8fde\u63a5FOFA method info \u00b6 def info ( self ) -> \u5b57\u7b26\u4e32\u5b57\u5178 \u83b7\u53d6\u8d26\u53f7\u4fe1\u606f method search \u00b6 def search ( self , query : str , page : int ) -> \u8fd4\u56de\u7ed3\u679c\u5217\u8868 \u5411FOFA\u63d0\u4ea4\u641c\u7d22\u8bf7\u6c42 query : \u67e5\u8be2\u8bed\u53e5 page : \u9875\u7801","title":"fofa"},{"location":"fofa-auto/#fofa-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import fofa # \u5f15\u5165\u6a21\u5757 from fofa import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"fofa Module"},{"location":"fofa-auto/#class-fofa","text":"class FOFA ( self , email : str , key : str ) \u8fde\u63a5FOFA","title":"class FOFA"},{"location":"fofa-auto/#method--info","text":"def info ( self ) -> \u5b57\u7b26\u4e32\u5b57\u5178 \u83b7\u53d6\u8d26\u53f7\u4fe1\u606f","title":"method  info"},{"location":"fofa-auto/#method--search","text":"def search ( self , query : str , page : int ) -> \u8fd4\u56de\u7ed3\u679c\u5217\u8868 \u5411FOFA\u63d0\u4ea4\u641c\u7d22\u8bf7\u6c42 query : \u67e5\u8be2\u8bed\u53e5 page : \u9875\u7801","title":"method  search"},{"location":"net-auto/","text":"net Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import net # \u5f15\u5165\u6a21\u5757 from net import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function ssh_run \u00b6 def ssh_run ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> None \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u542f\u52a8\u4ea4\u4e92\u5f0f passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4 address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d function request \u00b6 def request ( method : str , url : str , params : dict , data : str , headers : dict , verify : bool , proxy : dict , timeout = 15 ) -> Response \u53d1\u9001http\u8bf7\u6c42 params : url\u53c2\u6570\uff0c\u53ef\u7701\u7565 data : post\u6587\u672c\uff0c\u53ef\u7701\u7565 headers : \u8bf7\u6c42\u5934,\u53ef\u7701\u7565 verify : \u662f\u5426\u9a8c\u8bc1https\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u4e0d\u9a8c\u8bc1 proxy : \u662f\u5426\u4f7f\u7528\u4ee3\u7406\uff0c\u53ef\u7701\u7565 timeout : \u8d85\u65f6\uff0c\u53ef\u7701\u7565 method : GET,POST url : \u76ee\u6807url function ssh \u00b6 def ssh ( address : str , user : str , passwd_or_private_key_path : str ) -> None \u542f\u52a8\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684shell address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 function ssh_exec \u00b6 def ssh_exec ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> \u8fd4\u56de\u547d\u4ee4\u6267\u884c\u8f93\u51fa \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u7acb\u5373\u65ad\u5f00\u8fde\u63a5 address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4 function download \u00b6 def download ( url : str , save_path : str , proxy_url : str ) -> \u4e0b\u8f7d\u662f\u5426\u6210\u529f \u4e0b\u8f7d\u6587\u4ef6 url : \u6587\u4ef6url save_path : \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84\uff0c\u5982\u679c\u662f\u6587\u4ef6\u5c06\u4f1a\u5199\u5165\u6587\u4ef6\u3002\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u5f53\u524dIcarus\u5de5\u4f5c\u76ee\u5f55 proxy_url : \u4ee3\u7406url\uff0c\u53ef\u7701\u7565\u3002e.g. http://127.0.0.1:7890 \u4ee3\u7406\u5230\u672c\u5730clash class SFTP \u00b6 class SFTP ( self , address : str , user : str , passwd : str ) \u8fde\u63a5sftp method upload \u00b6 def upload ( self , local : str , remote : str ) -> None \u4e0a\u4f20\u6587\u4ef6 local : \u672c\u5730\u8def\u5f84 remote : \u8fdc\u7a0b\u8def\u5f84 method download \u00b6 def download ( self , remote : str , local : str ) -> None \u4e0b\u8f7d\u6587\u4ef6 remote : \u8fdc\u7a0b\u8def\u5f84 local : \u672c\u5730\u8def\u5f84 class HttpProxy \u00b6 class HttpProxy ( self , addr : str , dump = False , ca_path = \"\" ) \u5b9e\u4f8b\u5316\u4e00\u4e2aHttp\u4ee3\u7406 method close \u00b6 def close ( self ) -> None \u5173\u95ed\u4ee3\u7406 method start \u00b6 def start ( self ) -> None \u542f\u52a8\u4ee3\u7406 method request \u00b6 def request ( self ) -> None \u83b7\u53d6\u8bf7\u6c42 method response \u00b6 def response ( self ) -> None \u83b7\u53d6\u54cd\u5e94 class ProxyRequest \u00b6 class ProxyRequest ( self ) \u4ee3\u7406\u8bf7\u6c42 method method \u00b6 def method ( self , method = \"\" ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u65b9\u6cd5 method : \u65b0\u7684\u65b9\u6cd5 method headers \u00b6 def headers ( self , headers : dict ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u5934 headers : method body \u00b6 def body ( self , body : str ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u4f53 body : method url \u00b6 def url ( self ) -> None \u83b7\u53d6url class ProxyResponse \u00b6 class ProxyResponse ( self ) \u4ee3\u7406\u54cd\u5e94 method status_code \u00b6 def status_code ( self , code : int ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u72b6\u6001\u7801 code : class Response \u00b6 class Response ( self ) http\u54cd\u5e94 method text \u00b6 def text ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587 method content \u00b6 def content ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587(bytes) method status_code \u00b6 def status_code ( self ) -> None \u54cd\u5e94\u5305\u72b6\u6001\u7801 (\u5982\u679c\u4e3a-1\u5219\u8868\u793a\u8bf7\u6c42\u8fc7\u7a0b\u53d1\u751f\u9519\u8bef\uff0c\u8be6\u7ec6\u9519\u8bef\u7528text()\u65b9\u6cd5\u67e5\u770b\u3002 method headers \u00b6 def headers ( self ) -> None \u54cd\u5e94\u5934 \u5b58\u5728\u591a\u4e2a\u503c\u7684\u54cd\u5e94\u5934\u4ee5\u5217\u8868\u50a8\u5b58\u3002 class TCP \u00b6 class TCP ( self , address : str ) \u5efa\u7acbtcp\u8fde\u63a5 method send_line_bytes \u00b6 def send_line_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data : method recv \u00b6 def recv ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6240\u6709\u6570\u636e method log \u00b6 def log ( self ) -> None \u663e\u793a\u6536\u53d1\u65e5\u5fd7 method close \u00b6 def close ( self ) -> None \u5173\u95ed\u8fde\u63a5 method send_bytes \u00b6 def send_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4 data : method send \u00b6 def send ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32 data : method send_line \u00b6 def send_line ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data : method recv_line \u00b6 def recv_line ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6570\u636e\u5230\u6362\u884c\u7b26\u505c\u6b62 method interactive \u00b6 def interactive ( self ) -> None \u542f\u7528\u4ea4\u4e92\u5f0f\u6536\u53d1\u6570\u636e","title":"net"},{"location":"net-auto/#net-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import net # \u5f15\u5165\u6a21\u5757 from net import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"net Module"},{"location":"net-auto/#function--ssh_run","text":"def ssh_run ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> None \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u542f\u52a8\u4ea4\u4e92\u5f0f passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4 address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d","title":"function  ssh_run"},{"location":"net-auto/#function--request","text":"def request ( method : str , url : str , params : dict , data : str , headers : dict , verify : bool , proxy : dict , timeout = 15 ) -> Response \u53d1\u9001http\u8bf7\u6c42 params : url\u53c2\u6570\uff0c\u53ef\u7701\u7565 data : post\u6587\u672c\uff0c\u53ef\u7701\u7565 headers : \u8bf7\u6c42\u5934,\u53ef\u7701\u7565 verify : \u662f\u5426\u9a8c\u8bc1https\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u4e0d\u9a8c\u8bc1 proxy : \u662f\u5426\u4f7f\u7528\u4ee3\u7406\uff0c\u53ef\u7701\u7565 timeout : \u8d85\u65f6\uff0c\u53ef\u7701\u7565 method : GET,POST url : \u76ee\u6807url","title":"function  request"},{"location":"net-auto/#function--ssh","text":"def ssh ( address : str , user : str , passwd_or_private_key_path : str ) -> None \u542f\u52a8\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684shell address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84","title":"function  ssh"},{"location":"net-auto/#function--ssh_exec","text":"def ssh_exec ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> \u8fd4\u56de\u547d\u4ee4\u6267\u884c\u8f93\u51fa \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u7acb\u5373\u65ad\u5f00\u8fde\u63a5 address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4","title":"function  ssh_exec"},{"location":"net-auto/#function--download","text":"def download ( url : str , save_path : str , proxy_url : str ) -> \u4e0b\u8f7d\u662f\u5426\u6210\u529f \u4e0b\u8f7d\u6587\u4ef6 url : \u6587\u4ef6url save_path : \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84\uff0c\u5982\u679c\u662f\u6587\u4ef6\u5c06\u4f1a\u5199\u5165\u6587\u4ef6\u3002\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u5f53\u524dIcarus\u5de5\u4f5c\u76ee\u5f55 proxy_url : \u4ee3\u7406url\uff0c\u53ef\u7701\u7565\u3002e.g. http://127.0.0.1:7890 \u4ee3\u7406\u5230\u672c\u5730clash","title":"function  download"},{"location":"net-auto/#class-sftp","text":"class SFTP ( self , address : str , user : str , passwd : str ) \u8fde\u63a5sftp","title":"class SFTP"},{"location":"net-auto/#method--upload","text":"def upload ( self , local : str , remote : str ) -> None \u4e0a\u4f20\u6587\u4ef6 local : \u672c\u5730\u8def\u5f84 remote : \u8fdc\u7a0b\u8def\u5f84","title":"method  upload"},{"location":"net-auto/#method--download","text":"def download ( self , remote : str , local : str ) -> None \u4e0b\u8f7d\u6587\u4ef6 remote : \u8fdc\u7a0b\u8def\u5f84 local : \u672c\u5730\u8def\u5f84","title":"method  download"},{"location":"net-auto/#class-httpproxy","text":"class HttpProxy ( self , addr : str , dump = False , ca_path = \"\" ) \u5b9e\u4f8b\u5316\u4e00\u4e2aHttp\u4ee3\u7406","title":"class HttpProxy"},{"location":"net-auto/#method--close","text":"def close ( self ) -> None \u5173\u95ed\u4ee3\u7406","title":"method  close"},{"location":"net-auto/#method--start","text":"def start ( self ) -> None \u542f\u52a8\u4ee3\u7406","title":"method  start"},{"location":"net-auto/#method--request","text":"def request ( self ) -> None \u83b7\u53d6\u8bf7\u6c42","title":"method  request"},{"location":"net-auto/#method--response","text":"def response ( self ) -> None \u83b7\u53d6\u54cd\u5e94","title":"method  response"},{"location":"net-auto/#class-proxyrequest","text":"class ProxyRequest ( self ) \u4ee3\u7406\u8bf7\u6c42","title":"class ProxyRequest"},{"location":"net-auto/#method--method","text":"def method ( self , method = \"\" ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u65b9\u6cd5 method : \u65b0\u7684\u65b9\u6cd5","title":"method  method"},{"location":"net-auto/#method--headers","text":"def headers ( self , headers : dict ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u5934 headers :","title":"method  headers"},{"location":"net-auto/#method--body","text":"def body ( self , body : str ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u4f53 body :","title":"method  body"},{"location":"net-auto/#method--url","text":"def url ( self ) -> None \u83b7\u53d6url","title":"method  url"},{"location":"net-auto/#class-proxyresponse","text":"class ProxyResponse ( self ) \u4ee3\u7406\u54cd\u5e94","title":"class ProxyResponse"},{"location":"net-auto/#method--status_code","text":"def status_code ( self , code : int ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u72b6\u6001\u7801 code :","title":"method  status_code"},{"location":"net-auto/#class-response","text":"class Response ( self ) http\u54cd\u5e94","title":"class Response"},{"location":"net-auto/#method--text","text":"def text ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587","title":"method  text"},{"location":"net-auto/#method--content","text":"def content ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587(bytes)","title":"method  content"},{"location":"net-auto/#method--status_code_1","text":"def status_code ( self ) -> None \u54cd\u5e94\u5305\u72b6\u6001\u7801 (\u5982\u679c\u4e3a-1\u5219\u8868\u793a\u8bf7\u6c42\u8fc7\u7a0b\u53d1\u751f\u9519\u8bef\uff0c\u8be6\u7ec6\u9519\u8bef\u7528text()\u65b9\u6cd5\u67e5\u770b\u3002","title":"method  status_code"},{"location":"net-auto/#method--headers_1","text":"def headers ( self ) -> None \u54cd\u5e94\u5934 \u5b58\u5728\u591a\u4e2a\u503c\u7684\u54cd\u5e94\u5934\u4ee5\u5217\u8868\u50a8\u5b58\u3002","title":"method  headers"},{"location":"net-auto/#class-tcp","text":"class TCP ( self , address : str ) \u5efa\u7acbtcp\u8fde\u63a5","title":"class TCP"},{"location":"net-auto/#method--send_line_bytes","text":"def send_line_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data :","title":"method  send_line_bytes"},{"location":"net-auto/#method--recv","text":"def recv ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6240\u6709\u6570\u636e","title":"method  recv"},{"location":"net-auto/#method--log","text":"def log ( self ) -> None \u663e\u793a\u6536\u53d1\u65e5\u5fd7","title":"method  log"},{"location":"net-auto/#method--close_1","text":"def close ( self ) -> None \u5173\u95ed\u8fde\u63a5","title":"method  close"},{"location":"net-auto/#method--send_bytes","text":"def send_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4 data :","title":"method  send_bytes"},{"location":"net-auto/#method--send","text":"def send ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32 data :","title":"method  send"},{"location":"net-auto/#method--send_line","text":"def send_line ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data :","title":"method  send_line"},{"location":"net-auto/#method--recv_line","text":"def recv_line ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6570\u636e\u5230\u6362\u884c\u7b26\u505c\u6b62","title":"method  recv_line"},{"location":"net-auto/#method--interactive","text":"def interactive ( self ) -> None \u542f\u7528\u4ea4\u4e92\u5f0f\u6536\u53d1\u6570\u636e","title":"method  interactive"},{"location":"net/","text":"Net\u6a21\u5757 \u00b6 import net # \u5bfc\u5165net\u6a21\u5757 from net import * # \u5bfc\u5165net\u6a21\u5757\u4e2d\u7684\u6240\u6709\u7c7b\u4e0e\u51fd\u6570 class HttpProxy() \u00b6 \u5b9e\u4f8b \u00b6 \u672c\u5b9e\u4f8b\u5229\u7528HttpProxy\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5c06\u6240\u6709\u54cd\u5e94\u4fee\u6539\u4e3a\u5728\u9875\u9762\u9876\u90e8\u4e2d\u592e\u663e\u793aIt works!\u7684\u4ee3\u7406 from utils import * import net import time p = net . HttpProxy ( \"127.0.0.1:2077\" ) # \u76d1\u542c\u672c\u673a2077\u7aef\u53e3 p . start () # \u542f\u7528\u4ee3\u7406 while True : req = p . request () # \u83b7\u53d6\u5f85\u5904\u7406\u8bf7\u6c42 if req != None : # \u5982\u679c\u53d6\u5f97\u8bf7\u6c42 req . release () # \u91ca\u653e\u8bf7\u6c42 resp = p . response () # \u83b7\u53d6\u5f85\u5904\u7406\u54cd\u5e94 if resp != None : # \u5982\u679c\u53d6\u5f97\u54cd\u5e94 resp . headers ({ \"Content-Type\" : \"text/html\" }) # \u4fee\u6539\u54cd\u5e94\u5934 resp . body ( \"<html><center>It works!</center></html>\" ) # \u4fee\u6539\u54cd\u5e94\u4f53 resp . release () # \u91ca\u653e\u54cd\u5e94 time . sleep ( 0.1 ) # \u8bb0\u5f97\u4f7f\u7528sleep\u907f\u514dcpu\u5360\u7528\u8fc7\u9ad8 request() \u00b6 \u53d6\u5f97\u4ee3\u7406\u96a7\u9053\u4e2d\u7684\u8bf7\u6c42 \u51fd\u6570\u539f\u578b \u00b6 `` \u53c2\u6570 \u00b6 \u65e0\u53c2\u6570","title":"Net\u6a21\u5757"},{"location":"net/#net\u6a21\u5757","text":"import net # \u5bfc\u5165net\u6a21\u5757 from net import * # \u5bfc\u5165net\u6a21\u5757\u4e2d\u7684\u6240\u6709\u7c7b\u4e0e\u51fd\u6570","title":"Net\u6a21\u5757"},{"location":"net/#class-httpproxy","text":"","title":"class HttpProxy()"},{"location":"net/#\u5b9e\u4f8b","text":"\u672c\u5b9e\u4f8b\u5229\u7528HttpProxy\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5c06\u6240\u6709\u54cd\u5e94\u4fee\u6539\u4e3a\u5728\u9875\u9762\u9876\u90e8\u4e2d\u592e\u663e\u793aIt works!\u7684\u4ee3\u7406 from utils import * import net import time p = net . HttpProxy ( \"127.0.0.1:2077\" ) # \u76d1\u542c\u672c\u673a2077\u7aef\u53e3 p . start () # \u542f\u7528\u4ee3\u7406 while True : req = p . request () # \u83b7\u53d6\u5f85\u5904\u7406\u8bf7\u6c42 if req != None : # \u5982\u679c\u53d6\u5f97\u8bf7\u6c42 req . release () # \u91ca\u653e\u8bf7\u6c42 resp = p . response () # \u83b7\u53d6\u5f85\u5904\u7406\u54cd\u5e94 if resp != None : # \u5982\u679c\u53d6\u5f97\u54cd\u5e94 resp . headers ({ \"Content-Type\" : \"text/html\" }) # \u4fee\u6539\u54cd\u5e94\u5934 resp . body ( \"<html><center>It works!</center></html>\" ) # \u4fee\u6539\u54cd\u5e94\u4f53 resp . release () # \u91ca\u653e\u54cd\u5e94 time . sleep ( 0.1 ) # \u8bb0\u5f97\u4f7f\u7528sleep\u907f\u514dcpu\u5360\u7528\u8fc7\u9ad8","title":"\u5b9e\u4f8b"},{"location":"net/#request","text":"\u53d6\u5f97\u4ee3\u7406\u96a7\u9053\u4e2d\u7684\u8bf7\u6c42","title":"request()"},{"location":"net/#\u51fd\u6570\u539f\u578b","text":"``","title":"\u51fd\u6570\u539f\u578b"},{"location":"net/#\u53c2\u6570","text":"\u65e0\u53c2\u6570","title":"\u53c2\u6570"},{"location":"strings-auto/","text":"strings Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import strings # \u5f15\u5165\u6a21\u5757 from strings import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function replace \u00b6 def replace ( text : str , old : str , new : str , num =- 1 ) -> None \u5b57\u7b26\u4e32\u66ff\u6362 text : \u6587\u672c old : \u539f\u59cb\u5b57\u7b26\u4e32 new : \u66ff\u6362\u5b57\u7b26\u4e32 num : \u66ff\u6362\u6b21\u6570\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4-1\u4e3a\u5168\u90e8\u66ff\u6362 function match \u00b6 def match ( text : str , left : str , right : str ) -> \u8fd4\u56de\u5305\u542b\u7ed3\u679c\u7684\u5b57\u7b26\u4e32\u5217\u8868 \u5339\u914d\u6587\u672c\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5168\u90e8\u6587\u672c\uff08\u6b63\u5219\u5b9e\u73b0\uff09 e.g. match(\"abc aqc\",\"a\", \"c\") result: [\"b\",\"q\"] text : \u9700\u8981\u5339\u914d\u7684\u6587\u672c left : \u5de6\u4fa7\u6587\u672c right : \u53f3\u4fa7\u6587\u672c function extend \u00b6 def extend ( text : str , recursion : bool , delims : tuple ) -> None \u6309\u683c\u5f0f\u6269\u5c55\u5b57\u7b26\u4e32 eg. a[1-3]b \u6269\u5c55\u5f97\u5230 [\"a1b\",\"a2b\",\"a3b\"] text : \u6587\u672c recursion : \u662f\u5426\u9012\u5f52\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false\uff0c\u5f53\u6587\u672c\u6709\u591a\u4e2a\u6269\u5c55\u6807\u8bb0\u65f6\u53ef\u4ee5\u5f00\u542f delims : \u6269\u5c55\u6807\u8bb0\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4 (\"[\",\"-\",\"]\") function format \u00b6 def format ( format_str : str , * args ) -> None \u683c\u5f0f\u5316\u5b57\u7b26\u4e32","title":"strings"},{"location":"strings-auto/#strings-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import strings # \u5f15\u5165\u6a21\u5757 from strings import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"strings Module"},{"location":"strings-auto/#function--replace","text":"def replace ( text : str , old : str , new : str , num =- 1 ) -> None \u5b57\u7b26\u4e32\u66ff\u6362 text : \u6587\u672c old : \u539f\u59cb\u5b57\u7b26\u4e32 new : \u66ff\u6362\u5b57\u7b26\u4e32 num : \u66ff\u6362\u6b21\u6570\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4-1\u4e3a\u5168\u90e8\u66ff\u6362","title":"function  replace"},{"location":"strings-auto/#function--match","text":"def match ( text : str , left : str , right : str ) -> \u8fd4\u56de\u5305\u542b\u7ed3\u679c\u7684\u5b57\u7b26\u4e32\u5217\u8868 \u5339\u914d\u6587\u672c\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5168\u90e8\u6587\u672c\uff08\u6b63\u5219\u5b9e\u73b0\uff09 e.g. match(\"abc aqc\",\"a\", \"c\") result: [\"b\",\"q\"] text : \u9700\u8981\u5339\u914d\u7684\u6587\u672c left : \u5de6\u4fa7\u6587\u672c right : \u53f3\u4fa7\u6587\u672c","title":"function  match"},{"location":"strings-auto/#function--extend","text":"def extend ( text : str , recursion : bool , delims : tuple ) -> None \u6309\u683c\u5f0f\u6269\u5c55\u5b57\u7b26\u4e32 eg. a[1-3]b \u6269\u5c55\u5f97\u5230 [\"a1b\",\"a2b\",\"a3b\"] text : \u6587\u672c recursion : \u662f\u5426\u9012\u5f52\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false\uff0c\u5f53\u6587\u672c\u6709\u591a\u4e2a\u6269\u5c55\u6807\u8bb0\u65f6\u53ef\u4ee5\u5f00\u542f delims : \u6269\u5c55\u6807\u8bb0\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4 (\"[\",\"-\",\"]\")","title":"function  extend"},{"location":"strings-auto/#function--format","text":"def format ( format_str : str , * args ) -> None \u683c\u5f0f\u5316\u5b57\u7b26\u4e32","title":"function  format"},{"location":"test-net/","text":"net Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u751f\u6210 function request \u00b6 def request ( method : str , url : str , params : dict , data : str , headers : dict , verify : bool , proxy : dict , timeout = 15 ) -> Response \u53d1\u9001http\u8bf7\u6c42 proxy : \u662f\u5426\u4f7f\u7528\u4ee3\u7406\uff0c\u53ef\u7701\u7565 timeout : \u8d85\u65f6\uff0c\u53ef\u7701\u7565 method : GET,POST url : \u76ee\u6807url params : url\u53c2\u6570\uff0c\u53ef\u7701\u7565 data : post\u6587\u672c\uff0c\u53ef\u7701\u7565 headers : \u8bf7\u6c42\u5934,\u53ef\u7701\u7565 verify : \u662f\u5426\u9a8c\u8bc1https\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u4e0d\u9a8c\u8bc1 function ssh \u00b6 def ssh ( address : str , user : str , passwd_or_private_key_path : str ) -> None \u542f\u52a8\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684shell address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 function ssh_run \u00b6 def ssh_run ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> None \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u542f\u52a8\u4ea4\u4e92\u5f0f user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4 address : \u76ee\u6807\u5730\u5740 function download \u00b6 def download ( url : str , save_path : str , proxy_url : str ) -> \u4e0b\u8f7d\u662f\u5426\u6210\u529f \u4e0b\u8f7d\u6587\u4ef6 url : \u6587\u4ef6url save_path : \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84\uff0c\u5982\u679c\u662f\u6587\u4ef6\u5c06\u4f1a\u5199\u5165\u6587\u4ef6\u3002\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u5f53\u524dIcarus\u5de5\u4f5c\u76ee\u5f55 proxy_url : \u4ee3\u7406url\uff0c\u53ef\u7701\u7565\u3002e.g. http://127.0.0.1:7890 \u4ee3\u7406\u5230\u672c\u5730clash function ssh_exec \u00b6 def ssh_exec ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> \u8fd4\u56de\u547d\u4ee4\u6267\u884c\u8f93\u51fa \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u7acb\u5373\u65ad\u5f00\u8fde\u63a5 address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4 class TCP \u00b6 class TCP ( self , address : str ) \u5efa\u7acbtcp\u8fde\u63a5 method log \u00b6 def log ( self ) -> None \u663e\u793a\u6536\u53d1\u65e5\u5fd7 method interactive \u00b6 def interactive ( self ) -> None \u542f\u7528\u4ea4\u4e92\u5f0f\u6536\u53d1\u6570\u636e method send \u00b6 def send ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32 data : method send_line \u00b6 def send_line ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data : method recv \u00b6 def recv ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6240\u6709\u6570\u636e method close \u00b6 def close ( self ) -> None \u5173\u95ed\u8fde\u63a5 method send_bytes \u00b6 def send_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4 data : method send_line_bytes \u00b6 def send_line_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data : method recv_line \u00b6 def recv_line ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6570\u636e\u5230\u6362\u884c\u7b26\u505c\u6b62 class SFTP \u00b6 class SFTP ( self , address : str , user : str , passwd : str ) \u8fde\u63a5sftp method upload \u00b6 def upload ( self , local : str , remote : str ) -> None \u4e0a\u4f20\u6587\u4ef6 local : \u672c\u5730\u8def\u5f84 remote : \u8fdc\u7a0b\u8def\u5f84 method download \u00b6 def download ( self , remote : str , local : str ) -> None \u4e0b\u8f7d\u6587\u4ef6 local : \u672c\u5730\u8def\u5f84 remote : \u8fdc\u7a0b\u8def\u5f84 class HttpProxy \u00b6 class HttpProxy ( self , addr : str , dump = False , ca_path = \"\" ) \u5b9e\u4f8b\u5316\u4e00\u4e2aHttp\u4ee3\u7406 method close \u00b6 def close ( self ) -> None \u5173\u95ed\u4ee3\u7406 method start \u00b6 def start ( self ) -> None \u542f\u52a8\u4ee3\u7406 method request \u00b6 def request ( self ) -> None \u83b7\u53d6\u8bf7\u6c42 method response \u00b6 def response ( self ) -> None \u83b7\u53d6\u54cd\u5e94 class ProxyRequest \u00b6 class ProxyRequest ( self ) \u4ee3\u7406\u8bf7\u6c42 method method \u00b6 def method ( self , method = \"\" ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u65b9\u6cd5 method : \u65b0\u7684\u65b9\u6cd5 method headers \u00b6 def headers ( self , headers : dict ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u5934 headers : method url \u00b6 def url ( self ) -> None \u83b7\u53d6url method body \u00b6 def body ( self , body : str ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u4f53 body : class ProxyResponse \u00b6 class ProxyResponse ( self ) \u4ee3\u7406\u54cd\u5e94 method status_code \u00b6 def status_code ( self , code : int ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u72b6\u6001\u7801 code : class Response \u00b6 class Response ( self ) http\u54cd\u5e94 method content \u00b6 def content ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587(bytes) method status_code \u00b6 def status_code ( self ) -> None \u54cd\u5e94\u5305\u72b6\u6001\u7801 (\u5982\u679c\u4e3a-1\u5219\u8868\u793a\u8bf7\u6c42\u8fc7\u7a0b\u53d1\u751f\u9519\u8bef\uff0c\u8be6\u7ec6\u9519\u8bef\u7528text()\u65b9\u6cd5\u67e5\u770b\u3002 method headers \u00b6 def headers ( self ) -> None \u54cd\u5e94\u5934 \u5b58\u5728\u591a\u4e2a\u503c\u7684\u54cd\u5e94\u5934\u4ee5\u5217\u8868\u50a8\u5b58\u3002 method text \u00b6 def text ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587","title":"**net** Module"},{"location":"test-net/#net-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u751f\u6210","title":"net Module"},{"location":"test-net/#function--request","text":"def request ( method : str , url : str , params : dict , data : str , headers : dict , verify : bool , proxy : dict , timeout = 15 ) -> Response \u53d1\u9001http\u8bf7\u6c42 proxy : \u662f\u5426\u4f7f\u7528\u4ee3\u7406\uff0c\u53ef\u7701\u7565 timeout : \u8d85\u65f6\uff0c\u53ef\u7701\u7565 method : GET,POST url : \u76ee\u6807url params : url\u53c2\u6570\uff0c\u53ef\u7701\u7565 data : post\u6587\u672c\uff0c\u53ef\u7701\u7565 headers : \u8bf7\u6c42\u5934,\u53ef\u7701\u7565 verify : \u662f\u5426\u9a8c\u8bc1https\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u4e0d\u9a8c\u8bc1","title":"function  request"},{"location":"test-net/#function--ssh","text":"def ssh ( address : str , user : str , passwd_or_private_key_path : str ) -> None \u542f\u52a8\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684shell address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84","title":"function  ssh"},{"location":"test-net/#function--ssh_run","text":"def ssh_run ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> None \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u542f\u52a8\u4ea4\u4e92\u5f0f user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4 address : \u76ee\u6807\u5730\u5740","title":"function  ssh_run"},{"location":"test-net/#function--download","text":"def download ( url : str , save_path : str , proxy_url : str ) -> \u4e0b\u8f7d\u662f\u5426\u6210\u529f \u4e0b\u8f7d\u6587\u4ef6 url : \u6587\u4ef6url save_path : \u6587\u4ef6\u4fdd\u5b58\u8def\u5f84\uff0c\u5982\u679c\u662f\u6587\u4ef6\u5c06\u4f1a\u5199\u5165\u6587\u4ef6\u3002\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u5f53\u524dIcarus\u5de5\u4f5c\u76ee\u5f55 proxy_url : \u4ee3\u7406url\uff0c\u53ef\u7701\u7565\u3002e.g. http://127.0.0.1:7890 \u4ee3\u7406\u5230\u672c\u5730clash","title":"function  download"},{"location":"test-net/#function--ssh_exec","text":"def ssh_exec ( address : str , user : str , passwd_or_private_key_path : str , command : str ) -> \u8fd4\u56de\u547d\u4ee4\u6267\u884c\u8f93\u51fa \u901a\u8fc7ssh\u6267\u884c\u547d\u4ee4\u5e76\u7acb\u5373\u65ad\u5f00\u8fde\u63a5 address : \u76ee\u6807\u5730\u5740 user : \u7528\u6237\u540d passwd_or_private_key_path : \u5bc6\u7801\u6216\u79c1\u94a5\u6587\u4ef6\u8def\u5f84 command : \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4","title":"function  ssh_exec"},{"location":"test-net/#class-tcp","text":"class TCP ( self , address : str ) \u5efa\u7acbtcp\u8fde\u63a5","title":"class TCP"},{"location":"test-net/#method--log","text":"def log ( self ) -> None \u663e\u793a\u6536\u53d1\u65e5\u5fd7","title":"method  log"},{"location":"test-net/#method--interactive","text":"def interactive ( self ) -> None \u542f\u7528\u4ea4\u4e92\u5f0f\u6536\u53d1\u6570\u636e","title":"method  interactive"},{"location":"test-net/#method--send","text":"def send ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32 data :","title":"method  send"},{"location":"test-net/#method--send_line","text":"def send_line ( self , data : str ) -> None \u53d1\u9001\u5b57\u7b26\u4e32\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data :","title":"method  send_line"},{"location":"test-net/#method--recv","text":"def recv ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6240\u6709\u6570\u636e","title":"method  recv"},{"location":"test-net/#method--close","text":"def close ( self ) -> None \u5173\u95ed\u8fde\u63a5","title":"method  close"},{"location":"test-net/#method--send_bytes","text":"def send_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4 data :","title":"method  send_bytes"},{"location":"test-net/#method--send_line_bytes","text":"def send_line_bytes ( self , data : bytes ) -> None \u53d1\u9001\u5b57\u8282\u6570\u7ec4\uff0c\u4f46\u4f1a\u5728\u672b\u5c3e\u52a0\u6362\u884c\u7b26 data :","title":"method  send_line_bytes"},{"location":"test-net/#method--recv_line","text":"def recv_line ( self ) -> \u8fd4\u56de\u5b57\u8282\u6570\u7ec4 \u63a5\u6536\u6570\u636e\u5230\u6362\u884c\u7b26\u505c\u6b62","title":"method  recv_line"},{"location":"test-net/#class-sftp","text":"class SFTP ( self , address : str , user : str , passwd : str ) \u8fde\u63a5sftp","title":"class SFTP"},{"location":"test-net/#method--upload","text":"def upload ( self , local : str , remote : str ) -> None \u4e0a\u4f20\u6587\u4ef6 local : \u672c\u5730\u8def\u5f84 remote : \u8fdc\u7a0b\u8def\u5f84","title":"method  upload"},{"location":"test-net/#method--download","text":"def download ( self , remote : str , local : str ) -> None \u4e0b\u8f7d\u6587\u4ef6 local : \u672c\u5730\u8def\u5f84 remote : \u8fdc\u7a0b\u8def\u5f84","title":"method  download"},{"location":"test-net/#class-httpproxy","text":"class HttpProxy ( self , addr : str , dump = False , ca_path = \"\" ) \u5b9e\u4f8b\u5316\u4e00\u4e2aHttp\u4ee3\u7406","title":"class HttpProxy"},{"location":"test-net/#method--close_1","text":"def close ( self ) -> None \u5173\u95ed\u4ee3\u7406","title":"method  close"},{"location":"test-net/#method--start","text":"def start ( self ) -> None \u542f\u52a8\u4ee3\u7406","title":"method  start"},{"location":"test-net/#method--request","text":"def request ( self ) -> None \u83b7\u53d6\u8bf7\u6c42","title":"method  request"},{"location":"test-net/#method--response","text":"def response ( self ) -> None \u83b7\u53d6\u54cd\u5e94","title":"method  response"},{"location":"test-net/#class-proxyrequest","text":"class ProxyRequest ( self ) \u4ee3\u7406\u8bf7\u6c42","title":"class ProxyRequest"},{"location":"test-net/#method--method","text":"def method ( self , method = \"\" ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u65b9\u6cd5 method : \u65b0\u7684\u65b9\u6cd5","title":"method  method"},{"location":"test-net/#method--headers","text":"def headers ( self , headers : dict ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u5934 headers :","title":"method  headers"},{"location":"test-net/#method--url","text":"def url ( self ) -> None \u83b7\u53d6url","title":"method  url"},{"location":"test-net/#method--body","text":"def body ( self , body : str ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u8bf7\u6c42\u4f53 body :","title":"method  body"},{"location":"test-net/#class-proxyresponse","text":"class ProxyResponse ( self ) \u4ee3\u7406\u54cd\u5e94","title":"class ProxyResponse"},{"location":"test-net/#method--status_code","text":"def status_code ( self , code : int ) -> None \u83b7\u53d6\u6216\u66f4\u6539\u72b6\u6001\u7801 code :","title":"method  status_code"},{"location":"test-net/#class-response","text":"class Response ( self ) http\u54cd\u5e94","title":"class Response"},{"location":"test-net/#method--content","text":"def content ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587(bytes)","title":"method  content"},{"location":"test-net/#method--status_code_1","text":"def status_code ( self ) -> None \u54cd\u5e94\u5305\u72b6\u6001\u7801 (\u5982\u679c\u4e3a-1\u5219\u8868\u793a\u8bf7\u6c42\u8fc7\u7a0b\u53d1\u751f\u9519\u8bef\uff0c\u8be6\u7ec6\u9519\u8bef\u7528text()\u65b9\u6cd5\u67e5\u770b\u3002","title":"method  status_code"},{"location":"test-net/#method--headers_1","text":"def headers ( self ) -> None \u54cd\u5e94\u5934 \u5b58\u5728\u591a\u4e2a\u503c\u7684\u54cd\u5e94\u5934\u4ee5\u5217\u8868\u50a8\u5b58\u3002","title":"method  headers"},{"location":"test-net/#method--text","text":"def text ( self ) -> None \u83b7\u53d6\u54cd\u5e94\u6b63\u6587","title":"method  text"},{"location":"utils-auto/","text":"utils Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import utils # \u5f15\u5165\u6a21\u5757 from utils import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b function search \u00b6 def search ( text : str , items : list , fuzzy = False ) -> \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u5178 \uff0c \u503c\u4e3a\u641c\u7d22\u5230\u7684\u7ed3\u679c \uff0c \u952e\u4e3a\u7ed3\u679c\u6240\u5728\u884c \u5728\u5b57\u7b26\u4e32\u5217\u8868\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32 fuzzy : \u662f\u5426\u542f\u7528\u6a21\u7cca\u641c\u7d22\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4False text : \u9700\u8981\u641c\u7d22\u7684\u5b57\u7b26\u4e32 items : \u88ab\u641c\u7d22\u7684\u5b57\u7b26\u4e32\u5217\u8868 function exec_js \u00b6 def exec_js ( script : str ) -> None \u6267\u884cJavaScript\u4ee3\u7801 script : js\u4ee3\u7801 function exec_js_file \u00b6 def exec_js_file ( file_path : str ) -> None \u6267\u884cjs\u6587\u4ef6 file_path : js\u6587\u4ef6\u8def\u5f84 function notice \u00b6 def notice ( title : str , msg : str , png_path = \"\" , beep = False ) -> None \u5f39\u51fa\u901a\u77e5 title : \u6807\u9898 msg : \u6d88\u606f png_path : \u663e\u793a\u56fe\u7247\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32 beep : \u662f\u5426\u8702\u9e23\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false function unzip \u00b6 def unzip ( src : str , passwd : str , dest : str ) -> None \u89e3\u538bzip passwd : \u5bc6\u7801\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32 dest : \u76ee\u6807\u8def\u5f84\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u89e3\u538b\u5728zip\u540c\u76ee\u5f55\u4e0b src : zip\u6587\u4ef6\u8def\u5f84 function zip \u00b6 def zip ( src : str , passwd : str , dest : str ) -> None \u538b\u7f29zip src : \u6587\u4ef6\u5939\u8def\u5f84 passwd : \u5bc6\u7801\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32 dest : \u76ee\u6807\u8def\u5f84\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u6700\u540e\u6587\u4ef6\u5939.zip function fuzzy_match \u00b6 def fuzzy_match ( text1 : str , text2 : str ) -> None \u5728\u6587\u672c2\u4e2d\u6a21\u7cca\u5339\u914d\u6587\u672c1 text1 : \u6587\u672c1 text2 : \u6587\u672c2 function fuzzy_search \u00b6 def fuzzy_search ( text1 : str , text_list : list ) -> None \u5728\u6587\u672c\u5217\u8868\u4e2d\u6a21\u7cca\u5339\u914d\u6587\u672c text1 : \u6587\u672c text_list : \u6587\u672c\u5217\u8868 function select \u00b6 def select ( title : str , items : list ) -> \u8fd4\u56de\u9009\u9879\u5e8f\u53f7\u4e0e\u9009\u9879\u6587\u672c \u751f\u6210\u4e00\u4e2a\u9009\u62e9\u83dc\u5355\uff0c\u65b9\u5411\u952e\u9009\u62e9\uff0cEnter\u786e\u8ba4 title : \u6807\u9898 items : \u53ef\u9009\u62e9\u7684\u9879\u76ee\uff0c\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u82e5\u4e3a\u7a7a\u5219\u4e0d\u4f1a\u963b\u585e class ProgressBar \u00b6 class ProgressBar ( self , max_int : int ) \u751f\u6210\u4e00\u4e2a\u8fdb\u5ea6\u6761 method add \u00b6 def add ( self ) -> None \u589e\u52a0\u8fdb\u5ea6 method set \u00b6 def set ( self ) -> None \u8bbe\u7f6e\u8fdb\u5ea6","title":"utils"},{"location":"utils-auto/#utils-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import utils # \u5f15\u5165\u6a21\u5757 from utils import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"utils Module"},{"location":"utils-auto/#function--search","text":"def search ( text : str , items : list , fuzzy = False ) -> \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u5178 \uff0c \u503c\u4e3a\u641c\u7d22\u5230\u7684\u7ed3\u679c \uff0c \u952e\u4e3a\u7ed3\u679c\u6240\u5728\u884c \u5728\u5b57\u7b26\u4e32\u5217\u8868\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32 fuzzy : \u662f\u5426\u542f\u7528\u6a21\u7cca\u641c\u7d22\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4False text : \u9700\u8981\u641c\u7d22\u7684\u5b57\u7b26\u4e32 items : \u88ab\u641c\u7d22\u7684\u5b57\u7b26\u4e32\u5217\u8868","title":"function  search"},{"location":"utils-auto/#function--exec_js","text":"def exec_js ( script : str ) -> None \u6267\u884cJavaScript\u4ee3\u7801 script : js\u4ee3\u7801","title":"function  exec_js"},{"location":"utils-auto/#function--exec_js_file","text":"def exec_js_file ( file_path : str ) -> None \u6267\u884cjs\u6587\u4ef6 file_path : js\u6587\u4ef6\u8def\u5f84","title":"function  exec_js_file"},{"location":"utils-auto/#function--notice","text":"def notice ( title : str , msg : str , png_path = \"\" , beep = False ) -> None \u5f39\u51fa\u901a\u77e5 title : \u6807\u9898 msg : \u6d88\u606f png_path : \u663e\u793a\u56fe\u7247\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32 beep : \u662f\u5426\u8702\u9e23\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4false","title":"function  notice"},{"location":"utils-auto/#function--unzip","text":"def unzip ( src : str , passwd : str , dest : str ) -> None \u89e3\u538bzip passwd : \u5bc6\u7801\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32 dest : \u76ee\u6807\u8def\u5f84\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u89e3\u538b\u5728zip\u540c\u76ee\u5f55\u4e0b src : zip\u6587\u4ef6\u8def\u5f84","title":"function  unzip"},{"location":"utils-auto/#function--zip","text":"def zip ( src : str , passwd : str , dest : str ) -> None \u538b\u7f29zip src : \u6587\u4ef6\u5939\u8def\u5f84 passwd : \u5bc6\u7801\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32 dest : \u76ee\u6807\u8def\u5f84\uff0c\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a\u6700\u540e\u6587\u4ef6\u5939.zip","title":"function  zip"},{"location":"utils-auto/#function--fuzzy_match","text":"def fuzzy_match ( text1 : str , text2 : str ) -> None \u5728\u6587\u672c2\u4e2d\u6a21\u7cca\u5339\u914d\u6587\u672c1 text1 : \u6587\u672c1 text2 : \u6587\u672c2","title":"function  fuzzy_match"},{"location":"utils-auto/#function--fuzzy_search","text":"def fuzzy_search ( text1 : str , text_list : list ) -> None \u5728\u6587\u672c\u5217\u8868\u4e2d\u6a21\u7cca\u5339\u914d\u6587\u672c text1 : \u6587\u672c text_list : \u6587\u672c\u5217\u8868","title":"function  fuzzy_search"},{"location":"utils-auto/#function--select","text":"def select ( title : str , items : list ) -> \u8fd4\u56de\u9009\u9879\u5e8f\u53f7\u4e0e\u9009\u9879\u6587\u672c \u751f\u6210\u4e00\u4e2a\u9009\u62e9\u83dc\u5355\uff0c\u65b9\u5411\u952e\u9009\u62e9\uff0cEnter\u786e\u8ba4 title : \u6807\u9898 items : \u53ef\u9009\u62e9\u7684\u9879\u76ee\uff0c\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u82e5\u4e3a\u7a7a\u5219\u4e0d\u4f1a\u963b\u585e","title":"function  select"},{"location":"utils-auto/#class-progressbar","text":"class ProgressBar ( self , max_int : int ) \u751f\u6210\u4e00\u4e2a\u8fdb\u5ea6\u6761","title":"class ProgressBar"},{"location":"utils-auto/#method--add","text":"def add ( self ) -> None \u589e\u52a0\u8fdb\u5ea6","title":"method  add"},{"location":"utils-auto/#method--set","text":"def set ( self ) -> None \u8bbe\u7f6e\u8fdb\u5ea6","title":"method  set"},{"location":"vault-auto/","text":"vault Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import vault # \u5f15\u5165\u6a21\u5757 from vault import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b class Vault \u00b6 class Vault ( self , identifications : list ) \u7528\u4e8e\u641c\u7d22\u548c\u805a\u5408\u6570\u636e method search \u00b6 def search ( self , query : str ) -> None \u76f4\u63a5\u641c\u7d22 query : \u8981\u641c\u7d22\u7684\u5b57\u7b26\u4e32 method fuzzy_search \u00b6 def fuzzy_search ( self , conditions : dict ) -> None \u6a21\u7cca\u641c\u7d22 conditions : \u6307\u5b9a\u5bf9\u5e94\u5b57\u6bb5\u7684\u641c\u7d22\u5185\u5bb9 method exact_search \u00b6 def exact_search ( self , conditions : dict ) -> None \u7cbe\u786e\u641c\u7d22 conditions : \u6307\u5b9a\u5bf9\u5e94\u5b57\u6bb5\u7684\u641c\u7d22\u5185\u5bb9","title":"vault"},{"location":"vault-auto/#vault-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import vault # \u5f15\u5165\u6a21\u5757 from vault import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"vault Module"},{"location":"vault-auto/#class-vault","text":"class Vault ( self , identifications : list ) \u7528\u4e8e\u641c\u7d22\u548c\u805a\u5408\u6570\u636e","title":"class Vault"},{"location":"vault-auto/#method--search","text":"def search ( self , query : str ) -> None \u76f4\u63a5\u641c\u7d22 query : \u8981\u641c\u7d22\u7684\u5b57\u7b26\u4e32","title":"method  search"},{"location":"vault-auto/#method--fuzzy_search","text":"def fuzzy_search ( self , conditions : dict ) -> None \u6a21\u7cca\u641c\u7d22 conditions : \u6307\u5b9a\u5bf9\u5e94\u5b57\u6bb5\u7684\u641c\u7d22\u5185\u5bb9","title":"method  fuzzy_search"},{"location":"vault-auto/#method--exact_search","text":"def exact_search ( self , conditions : dict ) -> None \u7cbe\u786e\u641c\u7d22 conditions : \u6307\u5b9a\u5bf9\u5e94\u5b57\u6bb5\u7684\u641c\u7d22\u5185\u5bb9","title":"method  exact_search"},{"location":"windows-auto/","text":"windows Module \u00b6 *\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import windows # \u5f15\u5165\u6a21\u5757 from windows import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"windows"},{"location":"windows-auto/#windows-module","text":"*\u4ee5\u4e0b\u5185\u5bb9\u7531\u7a0b\u5e8f\u81ea\u52a8\u5448\u73b0 import windows # \u5f15\u5165\u6a21\u5757 from windows import * # \u5f15\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4e0e\u7c7b","title":"windows Module"},{"location":"%E5%AE%89%E8%A3%85/","text":"\u611f\u8c22\u5173\u6ce8\uff01\u4f46\u76ee\u524dICARUS\u4ecd\u5904\u4e8e\u51c6\u5907\u9636\u6bb5\u3002 \u5982\u679c\u4f60\u901a\u8fc7\u67d0\u79cd\u9014\u5f84 \u83b7\u5f97\u4e86ICARUS, \u4f60\u53ef\u4ee5\u5728shell\u6a21\u5f0f\u4e0b\u4f7f\u7528 update \u547d\u4ee4\u66f4\u65b0","title":"\u5b89\u88c5"},{"location":"%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/","text":"\u76ee\u5f55\u7ed3\u6784 \u00b6 ICARUS \u251c\u2500 ICARUS . exe # \u4e3b\u7a0b\u5e8f \u2514\u2500 MatchExecCollection # \u901a\u8fc7\u89c4\u5219\u5339\u914d\u81ea\u52a8\u6267\u884c\u7684\u5408\u96c6 \u9996\u6b21\u8fd0\u884c\u540e\u5c06\u521b\u5efa ~/.icarus ~/. icarus \u251c\u2500 CompatibilityPack # \u517c\u5bb9\u5305 \u2514\u2500 config . yml # \u901a\u7528\u914d\u7f6e\u6587\u4ef6","title":"\u5feb\u901f\u4e0a\u624b"},{"location":"%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#\u76ee\u5f55\u7ed3\u6784","text":"ICARUS \u251c\u2500 ICARUS . exe # \u4e3b\u7a0b\u5e8f \u2514\u2500 MatchExecCollection # \u901a\u8fc7\u89c4\u5219\u5339\u914d\u81ea\u52a8\u6267\u884c\u7684\u5408\u96c6 \u9996\u6b21\u8fd0\u884c\u540e\u5c06\u521b\u5efa ~/.icarus ~/. icarus \u251c\u2500 CompatibilityPack # \u517c\u5bb9\u5305 \u2514\u2500 config . yml # \u901a\u7528\u914d\u7f6e\u6587\u4ef6","title":"\u76ee\u5f55\u7ed3\u6784"}]}